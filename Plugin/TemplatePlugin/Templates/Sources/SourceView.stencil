import SwiftUI

import ComposableArchitecture

// MARK: - View

public struct {{name}}View: View {
  @ObservedObject
  private var viewStore: ViewStoreOf<{{name}}>
  private let store: StoreOf<{{name}}>

  public init(store: StoreOf<{{name}}>) {
    self.viewStore = .init(store, observe: { $0 })
    self.store = store
  }

  public var body: some View {
    List {
      Text("Hello, {{name}}!")
    }
    .task {
      await viewStore
        .send(.onAppear)
        .finish()
    }
  }
}

// MARK: - Preview

#Preview {
  {{name}}View(
    store: .init(
      initialState: .init(),
      reducer: {
          {{name}}()
      }
    )
  )
}
